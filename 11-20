11)1,3,8  Program, Potentiometer, Bluetooth

// Luke Jamie nCr robotics combination 11 of 56 of  8C3
#include<SoftwareSerial.h>
#include<Servo.h>
Servo servo1;
Servo servo2;
Servo servo3;
int bttx=9;    
int btrx=10;
int pos=0;
int val1  ; 
int potpin1;
SoftwareSerial bluetooth(bttx,btrx);
void setup()

{servo1.attach(11); 
servo2.attach(12);
servo3.attach(8) ;    
Serial.begin(9600);
bluetooth.begin(9600);}
void loop()
{if(bluetooth.available()>0)    
{int pos=bluetooth.read(); 
Serial.println(pos);
servo1.write(pos);}

for (pos = 0; pos <= 180; pos += 1) {
servo2.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo2.write(pos);             
delay(15);}
val1 = analogRead(potpin1);            
val1 = map(val1, 0, 1023, 0, 180);    
servo3.write(val1);                  
delay(15);}

12)1,4,5  Program ,Button, Rotary Encoder

// Luke Jamie nCr robotics combination 12 of 56 of 8C3

#include <Servo.h>
#define CLK 2
#define DT 3
Servo servo;
Servo servo2;
Servo servo3;
int counter = 0;
int currentStateCLK;
int lastStateCLK;
int pos=0;
int position=0;
const int buttonPin = 7;
const int buttonPin2 = 8;
int buttonState = 0;
int buttonState2 = 0;
void setup() {
pinMode(CLK,INPUT);
pinMode(DT,INPUT);
Serial.begin(9600);
servo.attach(5);
servo.write(counter);
lastStateCLK = digitalRead(CLK);
servo2.attach(6);
servo3.attach(4);}
void loop() { 
buttonState = digitalRead(buttonPin);
buttonState2 = digitalRead(buttonPin2);
if(buttonState ==HIGH && position < 180){
servo.write(position++);
delay(5);}
if(buttonState2 == HIGH && position > 3){
servo.write(position--);
delay(5);
currentStateCLK = digitalRead(CLK);
if (currentStateCLK != lastStateCLK  && currentStateCLK == 1){
if (digitalRead(DT) != currentStateCLK) {
counter --;
if (counter<0)
counter=0;} else {
counter ++;
if (counter>179)counter=179;}
servo.write(counter);
Serial.print("Position: ");
Serial.println(counter);}
lastStateCLK = currentStateCLK;

for (pos = 0; pos <= 180; pos += 1) {
servo2.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo2.write(pos);             
delay(15);}}}

13)1,4,6  Program ,Button ,IR remote

// Luke Jamie nCr robotics combination 13 of 56 of 8C3

#include <Servo.h>
Servo servo1;  
Servo servo2; 
Servo servo3; 

const int buttonPin = 7;
const int buttonPin2 = 8;
int buttonState = 0;
int buttonState2 = 0;
int position = 0;
int pos = 0 ; 
#include <IRremote.h>      
#define plus 0xA3C8EDDB   
#define minus 0xF076C13B
int val;
int RECV_PIN = 2;       
                
bool cwRotation, ccwRotation;
IRrecv irrecv(RECV_PIN);
decode_results results;
void setup(){
Serial.begin(9600);
irrecv.enableIRIn();
servo1.attach(9);
servo2.attach(10);
servo3.attach(11);
pinMode(buttonPin, INPUT);
pinMode(buttonPin2,INPUT);}
void loop() {

buttonState = digitalRead(buttonPin);
buttonState2 = digitalRead(buttonPin2);
if(buttonState ==HIGH && position < 180){
servo1.write(position++);
delay(5);}
if(buttonState2 == HIGH && position > 3){
servo1.write(position--);
delay(5);
}
for (pos = 0; pos <= 180; pos += 1) {
servo2.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo2.write(pos);             
delay(15);}

if (irrecv.decode(&results)) {
Serial.println(results.value, HEX);
irrecv.resume(); 
if (results.value == plus)
{
cwRotation = !cwRotation;      
ccwRotation = false;}
if (results.value == minus)
{ccwRotation = !ccwRotation;   
cwRotation = false;}}
if (cwRotation && (val != 175)){
val++;}
if (ccwRotation && (val != 0)){ val--;}{
servo3.write(val);
delay(20);}}

14)1,4,7   Program, Button ,Serial monitor

// Luke Jamie nCr robotics combination 14 of 56 of 8C3

#include <Servo.h>
int pos = 0;
Servo servo1;  
Servo servo2; 
Servo servo3; 
int position = 0; 
const int buttonPin = 7;
const int buttonPin2 = 8;
int buttonState = 0;
int buttonState2 = 0;
void setup(){
servo1.attach(3);
servo2.attach(4);
servo3.attach(5);
pinMode(buttonPin, INPUT);
pinMode(buttonPin2,INPUT);
Serial.begin(9600);
while (!Serial);
Serial.println("Type your degree 30 ,60 ,90 ,120 ,150 ,180");}


void loop(){

for (pos = 0; pos <= 180; pos += 1) {
servo1.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo1.write(pos);             
delay(15);}
buttonState = digitalRead(buttonPin);
buttonState2 = digitalRead(buttonPin2);
if(buttonState ==HIGH && position < 180){
servo2.write(position++);
delay(5);}
if(buttonState2 == HIGH && position > 3){
servo2.write(position--);
delay(5);
}
if (Serial.available()){
{int state = Serial.parseInt();
if (state == 30)
{servo3.write(30);
Serial.println("30 degrees");}
if (state == 60)
{servo3.write(60);
Serial.println("60 degrees");}
if (state == 90)
{servo3.write(90);
Serial.println("90 degrees");}
if (state == 120)
{servo3.write(120);
Serial.println("120 degrees");}
if (state == 150)
{servo3.write(150);
Serial.println("150 degrees");}
if (state == 180)
{servo3.write(180);
Serial.println("180 degrees");}}}}

15)1,4,8 Program ,Button ,Bluetooth


// Luke Jamie nCr robotics combination 14 of 56 of 8C3

#include<SoftwareSerial.h>
#include <Servo.h>
int pos = 0;
Servo servo1;  
Servo servo2; 
Servo servo3; 
const int buttonPin = 7;
const int buttonPin2 = 8;
int buttonState = 0;
int buttonState2 = 0;
int bttx=9;    
int btrx=10;
int position=0;
SoftwareSerial bluetooth(bttx,btrx);
void setup(){
servo1.attach(11);
servo2.attach(12);
servo3.attach(13) ;      
Serial.begin(9600);

pinMode(buttonPin, INPUT);
pinMode(buttonPin2,INPUT);}

void loop(){
buttonState = digitalRead(buttonPin);
buttonState2 = digitalRead(buttonPin2);
if(buttonState ==HIGH && position < 180){
servo2.write(position++);
delay(5);}
if(buttonState2 == HIGH && position > 3){
servo2.write(position--);
delay(5);
{if(bluetooth.available()>0)    
{int pos=bluetooth.read(); 
Serial.println(pos);
servo2.write(pos);}
for (pos = 0; pos <= 180; pos += 1) {
servo1.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo1.write(pos);}}}}


16)1,5,6   Program ,Rotary Encoder ,IR remote

// Luke Jamie nCr robotics combination 16 of 56 of 8C3

#include <IRremote.h>      
#define plus 0xA3C8EDDB   
#define minus 0xF076C13B 
#include <Servo.h>
#define CLK 2
#define DT 3
Servo servo;
Servo servo2;
Servo servo3;
int RECV_PIN = 2;
int counter = 0;
int currentStateCLK;
int lastStateCLK;
int pos=0;
bool cwRotation, ccwRotation;
IRrecv irrecv(RECV_PIN);
decode_results results;
int val;


void setup() {
pinMode(CLK,INPUT);
pinMode(DT,INPUT);
Serial.begin(9600);
servo.attach(9);
servo.write(counter);
lastStateCLK = digitalRead(CLK);
servo2.attach(8);
servo3.attach(7);
Serial.begin(9600);
irrecv.enableIRIn();}
void loop() { 
currentStateCLK = digitalRead(CLK);
if (currentStateCLK != lastStateCLK  && currentStateCLK == 1){
if (digitalRead(DT) != currentStateCLK) {
counter --;
if (counter<0)
counter=0;} else {
counter ++;
if (counter>179)counter=179;}
servo2.write(counter);
Serial.print("Position: ");
Serial.println(counter);}
lastStateCLK = currentStateCLK;

for (pos = 0; pos <= 180; pos += 1) {
servo3.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo3.write(pos);             
delay(15);}
if (irrecv.decode(&results)) {
Serial.println(results.value, HEX);
irrecv.resume(); 
if (results.value == plus)
{
cwRotation = !cwRotation;      
ccwRotation = false;}
if (results.value == minus)
{ccwRotation = !ccwRotation;   
cwRotation = false;}}
if (cwRotation && (val != 175)){
val++;}
if (ccwRotation && (val != 0)){ val--;}{
servo.write(val);
delay(20);}}

17)1,5,7  Program, Rotary Encoder ,Serial Monitor

// Luke Jamie nCr robotics combination 17 of 56 of 8C3

#include <Servo.h>
int pos = 0;
Servo servo1;  
Servo servo2; 
Servo servo3; 
#define CLK 2
#define DT 3
int counter = 0;
int currentStateCLK;
int lastStateCLK;
int val1;

void setup(){
Serial.begin(9600);
while (!Serial);
Serial.println("Type your degree 30 ,60 ,90 ,120 ,150 ,180");

pinMode(CLK,INPUT);
pinMode(DT,INPUT);
Serial.begin(9600);
servo1.attach(9);
servo2.write(counter);
lastStateCLK = digitalRead(CLK);
servo2.attach(8);
servo3.attach(7);}
void loop(){


for (pos = 0; pos <= 180; pos += 1) {
servo1.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo1.write(pos);             
delay(15);}
currentStateCLK = digitalRead(CLK);
if (currentStateCLK != lastStateCLK  && currentStateCLK == 1){
if (digitalRead(DT) != currentStateCLK) {
counter --;
if (counter<0)
counter=0;} else {
counter ++;
if (counter>179)counter=179;}
servo2.write(counter);
Serial.print("Position: ");
Serial.println(counter);}
lastStateCLK = currentStateCLK;
if (Serial.available()){
{int state = Serial.parseInt();
if (state == 30)
{servo3.write(30);
Serial.println("30 degrees");}
if (state == 60)
{servo3.write(60);
Serial.println("60 degrees");}
if (state == 90)
{servo3.write(90);
Serial.println("90 degrees");}
if (state == 120)
{servo3.write(120);
Serial.println("120 degrees");}
if (state == 150)
{servo3.write(150);
Serial.println("150 degrees");}
if (state == 180)
{servo3.write(180);
Serial.println("180 degrees");}}}}

18)1,5,8	      Program, Rotary Encoder ,Bluetooth

// Luke Jamie nCr robotics combination 18 of 56 of  8C3
#include<SoftwareSerial.h>
#include<Servo.h>
Servo servo;
Servo servo2;
Servo servo3;
#define CLK 2
#define DT 3
int bttx=9;    
int btrx=10;
int pos=0;
int val1  ; 
int potpin1;
SoftwareSerial bluetooth(bttx,btrx);
int counter = 0;
int currentStateCLK;
int lastStateCLK;
bool cwRotation, ccwRotation;
void setup() {
pinMode(CLK,INPUT);
pinMode(DT,INPUT);
Serial.begin(9600);
servo.attach(9);
servo.write(counter);
lastStateCLK = digitalRead(CLK);
servo2.attach(8);
servo3.attach(7);}
void loop() { 
currentStateCLK = digitalRead(CLK);
if (currentStateCLK != lastStateCLK  && currentStateCLK == 1){
if (digitalRead(DT) != currentStateCLK) {
counter --;
if (counter<0)
counter=0;} else {
counter ++;
if (counter>179)counter=179;}
servo2.write(counter);
Serial.print("Position: ");
Serial.println(counter);}
lastStateCLK = currentStateCLK;
{if(bluetooth.available()>0)    
{int pos=bluetooth.read(); 
Serial.println(pos);
servo.write(pos);}
for (pos = 0; pos <= 180; pos += 1) {
servo3.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo3.write(pos);             
delay(15);}}}

19)1,6,7 Program, IR remote ,Serial Monitor

// Luke Jamie nCr robotics combination 19 of 56 of 8C3

#include <IRremote.h>      
#define plus 0xA3C8EDDB   
#define minus 0xF076C13B 
#include <Servo.h>
Servo servo1;
Servo servo2;
Servo servo3;
int RECV_PIN = 2;
IRrecv irrecv(RECV_PIN);
decode_results results;
int pos = 0;
int val;
bool cwRotation, ccwRotation;
void setup(){
Serial.begin(9600);
while (!Serial);
Serial.println("Type your degree 30 ,60 ,90 ,120 ,150 ,180");
Serial.begin(9600);
irrecv.enableIRIn();
servo1.attach(9);
servo2.attach(8);
servo3.attach(7);}
void loop(){
if (Serial.available()){
{int state = Serial.parseInt();
if (state == 30)
{servo3.write(30);
Serial.println("30 degrees");}
if (state == 60)
{servo3.write(60);
Serial.println("60 degrees");}
if (state == 90)
{servo3.write(90);
Serial.println("90 degrees");}
if (state == 120)
{servo3.write(120);
Serial.println("120 degrees");}
if (state == 150)
{servo3.write(150);
Serial.println("150 degrees");}
if (state == 180)
{servo3.write(180);
Serial.println("180 degrees");}}}

if (irrecv.decode(&results)) {
Serial.println(results.value, HEX);
irrecv.resume(); 
if (results.value == plus)
{
cwRotation = !cwRotation;      
ccwRotation = false;}
if (results.value == minus)
{ccwRotation = !ccwRotation;   
cwRotation = false;}}
if (cwRotation && (val != 175)){
val++;
if (ccwRotation && (val != 0)){ val--;}{
servo2.write(val);
delay(20);}}

for (pos = 0; pos <= 180; pos += 1) {
servo1.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo1.write(pos);             
delay(15);}}

20)1,6,8 Program ,IR remote ,Bluetooth

// Luke Jamie nCr robotics combination 20 of 56 of  8C3
#include<SoftwareSerial.h>
#include<Servo.h>
#include <IRremote.h>      
#define plus 0xA3C8EDDB   
#define minus 0xF076C13B 
Servo servo1;
Servo servo2;
Servo servo3;
int bttx=9;    
int btrx=10;
int pos=0;
int val;

SoftwareSerial bluetooth(bttx,btrx);
int RECV_PIN = 2;
IRrecv irrecv(RECV_PIN);
decode_results results;
bool cwRotation, ccwRotation;
void setup(){
Serial.begin(9600);
irrecv.enableIRIn();
servo1.attach(9);
servo2.attach(8);
servo3.attach(7);}

void loop()

{if(bluetooth.available()>0)    
{int pos=bluetooth.read(); 
Serial.println(pos);
servo1.write(pos);}
{if (irrecv.decode(&results)) {
Serial.println(results.value, HEX);
irrecv.resume(); 
if (results.value == plus)
{
cwRotation = !cwRotation;      
ccwRotation = false;}
if (results.value == minus)
{ccwRotation = !ccwRotation;   
cwRotation = false;}}
if (cwRotation && (val != 175)){
val++;
if (ccwRotation && (val != 0)){ val--;}{
servo2.write(val);
delay(20);}}
for (pos = 0; pos <= 180; pos += 1) {
servo3.write(pos);              
delay(15);}
for (pos = 180; pos >= 0; pos -= 1) { 
servo3.write(pos);             
delay(15);}}}













